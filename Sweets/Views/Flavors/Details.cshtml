@{
  Layout = "_Layout";
}
@using Sweets.Models;
@model Sweets.Models.Flavor;
@using System.Security.Claims

<h1 class="jumbotron">Flavor Details</h1>
<hr/>
<h4>Name: @Html.DisplayFor(model => model.Name)</h4>
<hr/>

@if(@Model.Treats.Count == 0)
{
  <p>This Flavor doesn't have any treats yet.</p>
}
else
{
  <h4>Treats:</h4>
  <ul>
  @foreach(var join in Model.Treats)
  {
    <li>@join.Treat.Name</li>
    @if (User.Identity.IsAuthenticated)
    {
      @using (Html.BeginForm("DeleteTreat", "Flavors"))
      {
      @Html.Hidden("joinId", @join.FlavorTreatId)
      @Html.Hidden("id", Model.FlavorId)
      <input class="btn btn-danger btn-sm" type="submit" value="Delete"/>
    }
    }
  }
  </ul>
}

@if (User.Identity.IsAuthenticated)
{
  <input type="button" class="btn btn-primary mb-2" value="Add Treat to Flavor" onclick="location.href='@Url.Action("AddTreat", "Flavors", new { id = Model.FlavorId })'" />
<br>
}
<input type="button" class="btn btn-info" value="Back to Flavor List" onclick="location.href='@Url.Action("Index", "Flavors")'" />